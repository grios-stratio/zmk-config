/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&sk { quick-release; };

/ {
    chosen { zmk,physical-layout = &default_layout; };
};

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 34 35 36 37 38 39 43 44 45 42>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 40 41 42>;
        };

        caret6: caret6 {
            compatible = "zmk,behavior-mod-morph";
            label = "CARET6";
            bindings = <&kp CARET>, <&kp NUMBER_6>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ampersand7: ampersand7 {
            compatible = "zmk,behavior-mod-morph";
            label = "AMPERSAND7";
            bindings = <&kp AMPERSAND>, <&kp N7>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        asterisk8: asterisk8 {
            compatible = "zmk,behavior-mod-morph";
            label = "ASTERISK8";
            bindings = <&kp ASTERISK>, <&kp N8>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        leftparen9: leftparen9 {
            compatible = "zmk,behavior-mod-morph";
            label = "LEFTPAREN9";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp N9>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rightparen0: rightparen0 {
            compatible = "zmk,behavior-mod-morph";
            label = "RIGHTPAREN0";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp N0>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mtbr: mtbr {
            compatible = "zmk,behavior-hold-tap";
            label = "mod-tap-balanced-right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 40 41 42>;
        };

        mtbl: mtbl {
            compatible = "zmk,behavior-hold-tap";
            label = "mod-tap-balanced-left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <7 12 13 21 22 23 24 25 26 27 34 35 36 37 38 39 43 44 45 11 10 9 8>;
        };
    };

    macros {
        nav_and_altab: nav_and_altab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&to 3>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LALT>,
                <&macro_tap>,
                <&to 0>;

            label = "NAV_AND_ALTAB";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        altab_enter: altab_enter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp TAB &to 6>;

            label = "ALTAB_ENTER";
            wait-ms = <10>;
            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |  MUTE |  PP   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |  LALT |  RALT |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |               |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |               | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q              &kp W                &kp E            &kp R  &kp T      &none  &none  &kp Y                   &kp U  &kp I            &kp O                &kp P                 &kp BSPC
&nav_and_altab  &hml LEFT_SHIFT A  &hml LEFT_CONTROL S  &hml LEFT_ALT D  &kp F  &kp G      &none  &none  &kp H                   &kp J  &hmr LEFT_ALT K  &hmr LEFT_CONTROL L  &hmr LEFT_SHIFT SEMI  &kp RA(SQT)
&kp LSHFT       &kp Z              &kp X                &kp C            &kp V  &kp B                    &kp N                   &kp M  &kp COMMA        &kp DOT              &kp FSLH              &kp RSHFT
                                                        &nav_and_altab   &mo 1  &sk LSHFT                &mtbr LEFT_SHIFT SPACE  &mo 2  &mo 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN &inc_dec_kp C_PREV C_NEXT &inc_dec_kp C_BRI_DN C_BRI_UP>;
        };

        symbol {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  | LCTRL | RCTRL |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |  LALT | RALT  |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |               |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |               | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH      &kp DOLLAR  &kp PERCENT    &none  &none  &caret6      &ampersand7        &asterisk8     &leftparen9       &rightparen0       &kp DEL
&kp BSLH   &kp LSHFT        &kp LCTRL    &kp LALT      &kp LSHFT   &kp LESS_THAN  &none  &none  &kp PERCENT  &kp UNDERSCORE     &kp DOLLAR     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE
&kp RSHFT  &kp RIGHT_ALT    &kp LCTRL    &kp CAPSLOCK  &caps_word  &kp LEFT_GUI                 &kp RA(N)    &kp DOUBLE_QUOTES  &kp LESS_THAN  &kp GREATER_THAN  &kp QUESTION       &kp TILDE
                                         &none         &none       &none                        &kp ESC      &kp BSPC           &kp DEL
            >;
        };

        numbers {
            display-name = "NUMBER";
            bindings = <
&kp GRAVE  &kp N1           &kp N2                &kp N3          &kp N4           &kp N5     &none  &none  &kp N6            &kp N7     &kp N8     &kp N9     &kp N0     &kp BSPC
&kp BSLH   &kp EXCLAMATION  &kp AT_SIGN           &kp EQUAL       &kp MINUS        &kp POUND  &none  &none  &kp GREATER_THAN  &kp LSHFT  &kp LALT   &kp LCTRL  &kp LSHFT  &trans
&trans     &kp RA(SLASH)    &kp LS(RA(NUMBER_1))  &kp LA(EQUAL)   &kp SQT          &kp PLUS                 &kp F12           &kp ASTRK  &kp COMMA  &kp DOT    &kp FSLH   &trans
                                                  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp SPACE                &trans            &trans     &trans
            >;
        };

        navigation {
            display-name = "NAVIG";
            bindings = <
&altab_enter    &kp LC(Q)  &kp LC(W)  &kp END           &kp LC(R)  &kp LC(T)  &none  &none  &kp LC(Y)      &kp LC(U)     &kp LC(I)    &kp LC(O)  &kp LC(P)          &kp ESC
&kp LCTRL       &kp HOME   &kp LCTRL  &kp LALT          &kp LSHFT  &kp LC(G)  &none  &none  &kp LEFT       &kp DOWN      &kp UP       &kp RIGHT  &kp LC(SEMICOLON)  &caps_word
&kp LEFT_SHIFT  &kp LSHFT  &kp LC(X)  &kp LC(C)         &kp LC(V)  &none                    &kp LC(N)      &kp RET       &kp BSPC     &kp DEL    &kp TAB            &kp RIGHT_SHIFT
                                      &kp LEFT_CONTROL  &none      &mo 5                    &kp LC(SPACE)  &kp LC(BSPC)  &kp LC(DEL)
            >;
        };

        funtion {
            display-name = "FUN";
            bindings = <
&kp F12  &kp F1      &kp F2          &kp F3           &kp F4             &kp F5           &none  &none  &kp F6  &kp F7          &kp F8  &kp F9  &kp F10     &kp F11
&none    &caps_word  &msc SCRL_LEFT  &msc SCRL_UP     &msc SCRL_DOWN     &msc SCRL_RIGHT  &none  &none  &kp N6  &kp N7          &kp N8  &kp N9  &kp N0      &none
&none    &none       &none           &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &none                          &none   &studio_unlock  &none   &none   &sys_reset  &bootloader
                                     &none            &none              &none                          &mo 5   &none           &none
            >;
        };

        settings {
            display-name = "SETTINGS";
            bindings = <
&kp F12      &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &none  &none  &kp F6  &kp F7          &kp F8  &kp F9  &kp F10     &kp F11
&none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none  &none  &none   &bl BL_TOG      &none   &none   &none       &none
&bootloader  &none         &none         &none         &none         &bt BT_CLR                  &none   &studio_unlock  &none   &none   &sys_reset  &bootloader
                                         &none         &none         &none                       &none   &none           &none
            >;
        };

        altab {
            display-name = "ALTAB";
            bindings = <
&kp TAB         &none      &none      &kp END           &kp LC(R)  &kp LC(T)  &none  &none  &kp LC(Y)      &kp LC(U)     &kp LC(I)    &kp LC(O)  &kp LC(P)          &kp ESC
&kp GRAVE       &kp HOME   &kp LCTRL  &kp LALT          &kp LSHFT  &kp LC(G)  &none  &none  &kp LEFT       &kp DOWN      &kp UP       &kp RIGHT  &kp LC(SEMICOLON)  &caps_word
&kp LEFT_SHIFT  &kp LSHFT  &kp LC(X)  &kp LC(C)         &kp LC(V)  &none                    &kp LC(N)      &kp RET       &kp BSPC     &kp DEL    &kp TAB            &kp RIGHT_SHIFT
                                      &kp LEFT_CONTROL  &none      &mo 5                    &kp LC(SPACE)  &kp LC(BSPC)  &kp LC(DEL)
            >;
        };

        extra_layer_4 {
            display-name = "EXTRA 4";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        extra_layer_5 {
            display-name = "EXTRA 5";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        extra_layer_6 {
            display-name = "EXTRA 6";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
